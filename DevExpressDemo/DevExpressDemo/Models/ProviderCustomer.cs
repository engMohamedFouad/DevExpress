// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DevExpressDemo.Models
{
    public partial class ProviderCustomer
    {
        public ProviderCustomer()
        {
            AccountBalanceDetails = new HashSet<AccountBalanceDetail>();
        }

        public int PCID { get; set; }
        [Key]
        public int ProviderCustomerID { get; set; }
        public int ProviderCustomerCode { get; set; }
        public int BranchID { get; set; }
        [StringLength(100)]
        public string PCName { get; set; }
        [StringLength(100)]
        public string PCPerson { get; set; }
        [StringLength(50)]
        public string Phone { get; set; }
        [StringLength(50)]
        public string Fax { get; set; }
        [StringLength(50)]
        public string Mobile { get; set; }
        [StringLength(200)]
        public string PCAddress { get; set; }
        public int? CityID { get; set; }
        [StringLength(50)]
        public string PBox { get; set; }
        [StringLength(50)]
        public string Zip { get; set; }
        [StringLength(50)]
        public string EMail { get; set; }
        [StringLength(50)]
        public string AccID { get; set; }
        public int? DiscountPriceType { get; set; }
        public double? DiscountPriceValue { get; set; }
        public int? FrmValueCust { get; set; }
        public int? CountryID { get; set; }
        public int? SalemanID { get; set; }
        public int? GroupNo { get; set; }
        [Column(TypeName = "ntext")]
        public string Notes1 { get; set; }
        [Column(TypeName = "ntext")]
        public string Notes2 { get; set; }
        public int? BarcodeNo { get; set; }
        [StringLength(100)]
        public string PCNameEng { get; set; }
        public bool? Taxable { get; set; }
        [StringLength(50)]
        public string TaxNo { get; set; }
        public int? PCType { get; set; }
        public int? DebitCredit { get; set; }
        [StringLength(50)]
        public string AddtionalNo { get; set; }
        public int? PCNuture { get; set; }
        [StringLength(50)]
        public string CR { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastModified { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? Created { get; set; }
        [StringLength(50)]
        public string CreatedBy { get; set; }
        [StringLength(50)]
        public string LastModifiedBy { get; set; }
        [StringLength(100)]
        public string Address { get; set; }
        [StringLength(100)]
        public string Facebook { get; set; }
        [StringLength(100)]
        public string Twitter { get; set; }
        [StringLength(100)]
        public string SnapChat { get; set; }
        [StringLength(100)]
        public string Instagram { get; set; }
        [StringLength(100)]
        public string LinkedIn { get; set; }
        [StringLength(100)]
        public string Lat { get; set; }
        [StringLength(100)]
        public string Lon { get; set; }

        [ForeignKey("AccID")]
        [InverseProperty("ProviderCustomers")]
        public virtual TreeAccount Acc { get; set; }
        [ForeignKey("BranchID")]
        [InverseProperty("ProviderCustomers")]
        public virtual BranchsAndWarehouse Branch { get; set; }
        [ForeignKey("CityID")]
        [InverseProperty("ProviderCustomers")]
        public virtual City City { get; set; }
        [ForeignKey("GroupNo")]
        [InverseProperty("ProviderCustomers")]
        public virtual MainDatum GroupNoNavigation { get; set; }
        [ForeignKey("SalemanID")]
        [InverseProperty("ProviderCustomers")]
        public virtual SalesManInfo Saleman { get; set; }
        [InverseProperty("PC")]
        public virtual ICollection<AccountBalanceDetail> AccountBalanceDetails { get; set; }
    }
}