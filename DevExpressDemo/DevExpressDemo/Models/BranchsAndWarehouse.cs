// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DevExpressDemo.Models
{
    [Table("BranchsAndWarehouse")]
    public partial class BranchsAndWarehouse
    {
        public BranchsAndWarehouse()
        {
            AccountBalanceDetails = new HashSet<AccountBalanceDetail>();
            AccountBalances = new HashSet<AccountBalance>();
            AllInvoices = new HashSet<AllInvoice>();
            AllInvoicesDetails = new HashSet<AllInvoicesDetail>();
            AspNetUserRoles = new HashSet<AspNetUserRole>();
            CostCenterBalances = new HashSet<CostCenterBalance>();
            DistributionExpenses = new HashSet<DistributionExpense>();
            ExpensesProductions = new HashSet<ExpensesProduction>();
            FxiedAssets = new HashSet<FxiedAsset>();
            FxiedAssetsAddeds = new HashSet<FxiedAssetsAdded>();
            ItemRelatedAccs = new HashSet<ItemRelatedAcc>();
            ItemsAlternatives = new HashSet<ItemsAlternative>();
            ItemsPersonalities = new HashSet<ItemsPersonality>();
            ProviderCustomers = new HashSet<ProviderCustomer>();
            QuantityBatchBranches = new HashSet<QuantityBatch>();
            QuantityBatchWareHouses = new HashSet<QuantityBatch>();
            QuantityBranches = new HashSet<Quantity>();
            QuantityWareHouses = new HashSet<Quantity>();
            SalesManInfos = new HashSet<SalesManInfo>();
            SalesmanQuantities = new HashSet<SalesmanQuantity>();
        }

        public int BWID { get; set; }
        [Key]
        public int BWCode { get; set; }
        public int? BwCodeID { get; set; }
        [StringLength(50)]
        public string BWAccID { get; set; }
        [StringLength(100)]
        public string BWBrWaName { get; set; }
        [StringLength(100)]
        public string BWPerson { get; set; }
        [StringLength(50)]
        public string BWPhone { get; set; }
        [StringLength(50)]
        public string BWFax { get; set; }
        [StringLength(250)]
        public string BWAddress { get; set; }
        public int? BWType { get; set; }
        [StringLength(50)]
        public string BWMobile { get; set; }
        [StringLength(100)]
        public string BWBrWaNameEng { get; set; }
        [StringLength(50)]
        public string BWVatNo { get; set; }
        [Column(TypeName = "image")]
        public byte[] BWImage { get; set; }
        public bool? BWDataView { get; set; }
        [StringLength(50)]
        public string AddtionalNo { get; set; }
        [StringLength(50)]
        public string ZipNo { get; set; }
        [StringLength(50)]
        public string CIAccBank { get; set; }
        [StringLength(50)]
        public string CITradReg { get; set; }
        [StringLength(100)]
        public string CINameArb { get; set; }
        [StringLength(100)]
        public string CINameEng { get; set; }
        [StringLength(50)]
        public string PBox { get; set; }
        [StringLength(50)]
        public string Email { get; set; }
        public int? CountryID { get; set; }
        public int? CityID { get; set; }
        [StringLength(100)]
        public string CIAddressEng { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastModified { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? Created { get; set; }
        [StringLength(50)]
        public string CreatedBy { get; set; }
        [StringLength(50)]
        public string LastModifiedBy { get; set; }
        public int? BranchState { get; set; }
        [StringLength(500)]
        public string BWImageURL { get; set; }

        [ForeignKey("BWAccID")]
        [InverseProperty("BranchsAndWarehouses")]
        public virtual TreeAccount BWAcc { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<AccountBalanceDetail> AccountBalanceDetails { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<AccountBalance> AccountBalances { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<AllInvoice> AllInvoices { get; set; }
        [InverseProperty("Warehouse")]
        public virtual ICollection<AllInvoicesDetail> AllInvoicesDetails { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<AspNetUserRole> AspNetUserRoles { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<CostCenterBalance> CostCenterBalances { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<DistributionExpense> DistributionExpenses { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<ExpensesProduction> ExpensesProductions { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<FxiedAsset> FxiedAssets { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<FxiedAssetsAdded> FxiedAssetsAddeds { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<ItemRelatedAcc> ItemRelatedAccs { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<ItemsAlternative> ItemsAlternatives { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<ItemsPersonality> ItemsPersonalities { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<ProviderCustomer> ProviderCustomers { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<QuantityBatch> QuantityBatchBranches { get; set; }
        [InverseProperty("WareHouse")]
        public virtual ICollection<QuantityBatch> QuantityBatchWareHouses { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<Quantity> QuantityBranches { get; set; }
        [InverseProperty("WareHouse")]
        public virtual ICollection<Quantity> QuantityWareHouses { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<SalesManInfo> SalesManInfos { get; set; }
        [InverseProperty("Branch")]
        public virtual ICollection<SalesmanQuantity> SalesmanQuantities { get; set; }
    }
}