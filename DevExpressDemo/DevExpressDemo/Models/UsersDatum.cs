// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DevExpressDemo.Models
{
    public partial class UsersDatum
    {
        public UsersDatum()
        {
            UserDataPermissions = new HashSet<UserDataPermission>();
        }

        [Key]
        public int UserID { get; set; }
        [StringLength(100)]
        public string UserName { get; set; }
        public int? DiscountCash { get; set; }
        public int? DiscountCredit { get; set; }
        public bool? NoActive { get; set; }
        [Column(TypeName = "ntext")]
        public string Notes { get; set; }
        public int? TypeUser { get; set; }
        public int? MinuteWait { get; set; }
        [StringLength(100)]
        public string UserNameEng { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastModified { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? Created { get; set; }
        [StringLength(50)]
        public string CreatedBy { get; set; }
        [StringLength(50)]
        public string LastModifiedBy { get; set; }
        [StringLength(100)]
        public string NormalizedUserName { get; set; }
        [StringLength(100)]
        public string Email { get; set; }
        [StringLength(100)]
        public string NormalizedEmail { get; set; }
        public bool? EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string ConcurrencyStamp { get; set; }
        [StringLength(100)]
        public string PhoneNumber { get; set; }
        public bool? PhoneNumberConfirmed { get; set; }
        public bool? TwoFactorEnabled { get; set; }
        public DateTimeOffset? LockoutEnd { get; set; }
        public bool? LockoutEnabled { get; set; }
        public int? AccessFailedCount { get; set; }

        [InverseProperty("User")]
        public virtual ICollection<UserDataPermission> UserDataPermissions { get; set; }
    }
}